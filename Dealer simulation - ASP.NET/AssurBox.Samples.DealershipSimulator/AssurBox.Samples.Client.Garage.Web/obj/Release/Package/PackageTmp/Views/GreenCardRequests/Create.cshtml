@model AssurBox.SDK.DTO.GreenCard.Car.GreenCardRequestInitialization

@{
    ViewBag.Title = "Create new request";
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Green Card Request Initialization</h4>
    <hr />
    <div class="alert alert-info">
        <p>For demo purpose, we generate some data, feel free to change them</p>
    </div>
    @Html.ValidationSummary(false, "", new { @class = "text-danger" })

    <fieldset>
        <legend>Customer <small>(should come from the partner information system)</small></legend>

        <div class="form-group">
            @Html.LabelFor(model => model.VehicleOwner.Person.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.VehicleOwner.Person.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.VehicleOwner.Person.LastName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.VehicleOwner.Person.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.VehicleOwner.Person.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.VehicleOwner.Person.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.VehicleOwner.Person.BirthDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.VehicleOwner.Person.BirthDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.VehicleOwner.Person.BirthDate, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.VehicleOwner.Person.NationalIdentityNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.VehicleOwner.Person.NationalIdentityNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.VehicleOwner.Person.NationalIdentityNumber, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.VehicleOwner.Person.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.VehicleOwner.Person.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.VehicleOwner.Person.Email, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.VehicleOwner.Person.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.VehicleOwner.Person.Phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.VehicleOwner.Person.Phone, "", new { @class = "text-danger" })
            </div>
        </div>
        <h4>Customer address</h4>
        <div class="form-group">
            @Html.LabelFor(model => model.VehicleOwner.Person.Address.City, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.VehicleOwner.Person.Address.City, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.VehicleOwner.Person.Address.City, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.VehicleOwner.Person.Address.ZipOrPostcode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.VehicleOwner.Person.Address.ZipOrPostcode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.VehicleOwner.Person.Address.ZipOrPostcode, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.VehicleOwner.Person.Address.Street, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.VehicleOwner.Person.Address.Street, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.VehicleOwner.Person.Address.Street, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.VehicleOwner.Person.Address.Number, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.VehicleOwner.Person.Address.Number, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.VehicleOwner.Person.Address.Number, "", new { @class = "text-danger" })
            </div>
        </div>

    </fieldset>

    <fieldset>
        <legend>Vehicle data <small>(should come from the partner information system)</small></legend>
        <div class="form-group">
            @Html.LabelFor(model => model.CarDetails.VehicleAcquisitionType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.CarDetails.VehicleAcquisitionType, new { @class = "form-control" })

                @Html.ValidationMessageFor(model => model.CarDetails.VehicleAcquisitionType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CarDetails.DateOfFirstRegistration, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CarDetails.DateOfFirstRegistration, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CarDetails.DateOfFirstRegistration, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CarDetails.Fuel, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.CarDetails.Fuel, new { @class = "form-control" })

                @Html.ValidationMessageFor(model => model.CarDetails.Fuel, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CarDetails.Make, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CarDetails.Make, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CarDetails.Make, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CarDetails.Model, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CarDetails.Model, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CarDetails.Model, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CarDetails.Version, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CarDetails.Version, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CarDetails.Version, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CarDetails.EngineSizeInCm3, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CarDetails.EngineSizeInCm3, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CarDetails.EngineSizeInCm3, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CarDetails.EnginePowerInKw, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CarDetails.EnginePowerInKw, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CarDetails.EnginePowerInKw, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CarDetails.RunningOrderMassInKg, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CarDetails.RunningOrderMassInKg, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CarDetails.RunningOrderMassInKg, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CarDetails.MaximumMassInKg, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CarDetails.MaximumMassInKg, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CarDetails.MaximumMassInKg, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CarDetails.CO2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CarDetails.CO2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CarDetails.CO2, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CarDetails.NumberOfFrontSeats, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CarDetails.NumberOfFrontSeats, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CarDetails.NumberOfFrontSeats, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CarDetails.NumberOfBackSeats, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CarDetails.NumberOfBackSeats, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CarDetails.NumberOfBackSeats, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CarDetails.PriceWithOption, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CarDetails.PriceWithOption, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CarDetails.PriceWithOption, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CarDetails.PriceWithoutOption, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CarDetails.PriceWithoutOption, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CarDetails.PriceWithoutOption, "", new { @class = "text-danger" })
            </div>
        </div>


    </fieldset>

    <fieldset>
        <legend>Request data <small>(could come from the partner information system)</small></legend>

        <div class="form-group">
            @*//https://stackoverflow.com/questions/3057873/how-to-write-a-simple-html-dropdownlistfor*@
            @Html.LabelFor(model => model.RecipientInsurer.Name, "Insurance ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.RecipientInsurer.VAT, new SelectList(ViewBag.Insurances, "VAT", "Name"), "Select insurance", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.RecipientInsurer.VAT, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EffectiveDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EffectiveDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EffectiveDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CarDetails.LicencePlate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CarDetails.LicencePlate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CarDetails.LicencePlate, "", new { @class = "text-danger" })
                <span class="help-block">Luxembourg format  : 2 letters + 4 digits, or 5 digits, or 4 digits (see <a href="http://www.snca.lu/content/view/316/266/lang,french/">snca website</a> )</span>

            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CarDetails.VIN, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CarDetails.VIN, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CarDetails.VIN, "", new { @class = "text-danger" })
                <span class="help-block"><a href="http://randomvin.com/" target="_blank">VIN number generator</a></span>

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Communication, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Communication, 5, 80, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Communication, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.RequestType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.RequestType, new { @class = "form-control" })

                @Html.ValidationMessageFor(model => model.RequestType, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <p>If RequestType is "Transcription"</p>
            @Html.LabelFor(model => model.LicencePlateToReplace, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LicencePlateToReplace, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LicencePlateToReplace, "", new { @class = "text-danger" })
            </div>
        </div>
    </fieldset>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
